generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"] // this line enables search
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id              String @id @default(uuid())
  name            String
  companions      Companion[]
}

model Companion {
  id              String @id @default(uuid())
  userId          String
  userName        String
  src             String
  name            String @db.Text // @db.Text decorator enables much longer character lengths and makes it searchable
  description     String
  instructions    String @db.Text
  seed            String @db.Text

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  category        Category @relation(fields: [categoryId], references: [id])
  categoryId      String

  messages        Message[]

  @@index([categoryId]) // need because prisma doesn't support foreign keys (see relation)
  @@fulltext([name]) // enables full text search on name
}

enum Role {
  user
  system
}

model Message {
  id              String @id @default(uuid())
  role            Role
  content         String @db.Text
  createdAt       DateTime @default(now())

  companionId     String
  userId          String

  companion       Companion @relation(fields: [companionId], references: [id], onDelete: Cascade) // cascade means that once a companion is deleted, the associated messages will also be deleted

  @@index([companionId])
}